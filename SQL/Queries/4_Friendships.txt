--     Return all users who are friends with Kermit, make sure their names are displayed in results.
SELECT CONCAT(users.first_name, ' ', users.last_name) AS 'Kermit_Friends'
FROM users
LEFT JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users AS users2 ON friendships.friend_id = users2.id
WHERE users2.first_name = 'Kermit';


--      Return the count of all friendships
SELECT COUNT(*) 
FROM friendships;

--     Find out who has the most friends and return the count of their friends.
SELECT CONCAT(users.first_name, ' ', users.last_name) AS 'user', COUNT(friends.counter) AS friend_count
FROM users
LEFT JOIN (
	SELECT user_id, friend_id FROM friendships
    UNION ALL SELECT friend_id AS user_id, user_id AS friend_id FROM friendships
    ) AS friends 
ON users.id = friends.user_id
GROUP BY users.id;


--     Create a new user and make them friends with Eli Byers, Kermit The Frog, and Marky Mark
INSERT INTO users (first_name, last_name, created_at, updated_at)
VALUES ('Jason', 'Hanna', NOW(), NOW());

UPDATE users
SET updated_at = null
WHERE id = 6; 

INSERT INTO friendships (user_id, friend_id, created_at)
VALUES (6, 2, NOW()),
	(6, 4, NOW()),
    (6, 5, NOW());

--     Return the friends of Eli in alphabetical order
SELECT CONCAT(users2.first_name, ' ', users2.last_name) AS friend_name
FROM users
LEFT JOIN (
	SELECT user_id, friend_id FROM friendships
    UNION ALL SELECT friend_id AS user_id, user_id AS friend_id FROM friendships
    ) AS friends 
ON users.id = friends.user_id
LEFT JOIN users AS users2 ON users2.id = friends.friend_id
WHERE users.id = 1
ORDER BY friend_name;

--     Remove Marky Mark from Eliâ€™s friends
DELETE FROM friendships
WHERE id = 5;

--     Return all friendships, displaying just the first and last name of both friends
SELECT users.first_name
	, users.last_name
    , friends.first_name AS friends_first
    , friends.last_name AS friends_last
    FROM users
    JOIN friendships ON users.id = friendships.user_id
    JOIN users AS friends ON friendships.friend_id = friends.id