// 1
// Biggie Size - Given an array, write a function that changes all positive numbers in the array to the string "big".  
// Example: makeItBig([-1,3,5,-5]) returns that same array, changed to [-1, "big", "big", -5].
var arr = [-1,3,5,-5]
function makeItBig(){
    for (i=0;i<arr.length;i++){
        if (arr[i]>0){
            arr[i]="big"
        }
    }
    return arr
}
console.log(makeItBig(arr))


// 2
// Print Low, Return High - Create a function that takes in an array of numbers.  The function should print the lowest 
// value in the array, and return the highest value in the array.
var arr = [5,9,3,6,7]
function printLowReturnHigh(arr){
    var min = arr[0]
    var max = arr[0]
    for (i=0;i<arr.length;i++){
        if (arr[i]<min){
            min = arr[i]
        }
        if (arr[i]>max){
            max=arr[i]
        }
    }
    console.log(min)
    return max
}
max = printLowReturnHigh(arr)
console.log(max)

// 3
// Print One, Return Another - Build a function that takes in an array of numbers.  The function should print the 
// second-to-last value in the array, and return the first odd value in the array.
var arr = [6,2,1,8,6]
function printOneReturnAnother(arr){
    console.log(arr[arr.length-2])
    var test = null
    for (i=0;i<arr.length;i++){
        if (arr[i] % 2 == 1){
            test = arr[i]
            break
        }
    }
    if (test == null){
        console.log("no odd values")
        return null
    }
    return arr[i]
    
}
odd = printOneReturnAnother(arr)
console.log(odd)

// 4
// Double Vision - Given an array (similar to saying 'takes in an array'), create a function that returns a new array 
// where each value in the original array has been doubled.  Calling double([1,2,3]) should return [2,4,6] without changing the original array.
var arr = [1,2,4,8]
function double(arr) {
    var newarr = []
    for (i=0;i<arr.length;i++) {
        newarr[i] = arr[i]*2
    }
    return newarr
}
testarr = double(arr)
console.log(testarr)
console.log(arr)

// 5
// Count Positives - Given an array of numbers, create a function to replace the last value with the number of positive 
// values found in the array.  Example, countPositives([-1,1,1,1]) changes the original array to [-1,1,1,3] and returns it.
var arr = [-1,1,1,1] 
function countPositives(arr){
    var count = 0
    for (i=0;i<arr.length;i++) {
        if (arr[i] > 0){
            count++
        }
    }
    arr[arr.length-1] = count
    return arr
}
console.log(countPositives(arr))

// 6
// Evens and Odds - Create a function that accepts an array.  Every time that array has three odd values in a row, print 
// "That's odd!".  Every time the array has three evens in a row, print "Even more so!".
var arr = [1,2,3,4,6,8,9,10,11,13,15,16,18,20,22,24,26]
function evensOdds() {
    var evenCounter = 0
    var oddCounter = 0
    for (i=0;i<arr.length;i++){
        if (arr[i]%2==0){
            evenCounter++
            oddCounter=0
        } else {
            oddCounter++
            evenCounter=0
        }
        if (evenCounter==3){
            console.log("Even more so!")
            evenCounter=0
        }
        else if (oddCounter==3){
            console.log("That's odd!")
            oddCounter=0
        }
    }
}
evensOdds(arr)


// 7
// Increment the Seconds - Given an array of numbers arr, add 1 to every other element, specifically those whose index is 
// odd (arr[1], arr[3], arr[5], etc).  Afterward, console.log each array value and return arr.
var arr = [2,5,4,3,6,8,3]
function incrementOdd(arr){
    for (i=0;i<arr.length;i++){
        if (i%2==1){
            arr[i]++
            console.log(arr[i])
        }
        else {
            console.log(arr[i])
        }
    }
    return arr
}
var arr2 = incrementOdd(arr)
console.log(arr2)

// 8
// Previous Lengths - You are passed an array (similar to saying 'takes in an array' or 'given an array') containing 
// strings.  Working within that same array, replace each string with a number - the length of the string at the previous 
// array index - and return the array.  For example, previousLengths(["hello", "dojo", "awesome"]) should return 
// ["hello", 5, 4]. Hint: Can for loops only go forward?
var arr = ["a","be","cee","deee","eeeee", "efffff"]
function prevLength(arr) {
    var prev
    for (i=arr.length-1; i>0; i--) {
        prev = arr[i-1]
        arr[i] = prev.length
    }
    return arr
}
console.log(prevLength(arr))

// 9
// Add Seven - Build a function that accepts an array. Return a new array with all the values of the original, but add 7 
//to each. Do not alter the original array.  Example, addSeven([1,2,3]) should return [8,9,10] in a new array.
var arr = [1,2,3]
function addSeven(arr){
    var newarr = []
    for (i=0;i<arr.length;i++){
        newarr[i] = arr[i]+7
    }
    return newarr
}
seven = addSeven(arr)
console.log(seven)

// 10
// Reverse Array - Given an array, write a function that reverses its values, in-place.  Example: reverse([3,1,6,4,2]) 
// returns the same array, but now contains values reversed like so... [2,4,6,1,3].  Do this without creating an empty 
// temporary array.  (Hint: you'll need to swap values).
var arr = [1,2,3,4,5]
var arr1 = [1,2,3,4,5,6]
function reverseArr(arr){
    var temp = null
    for (i=0;i<arr.length/2;i++){
        temp = arr[i]
        arr[i] = arr[arr.length-1-i]
        arr[arr.length-1-i] = temp
    }
    return arr
}
console.log(reverseArr(arr))
console.log(reverseArr(arr1))

// 11
// Outlook: Negative - Given an array, create and return a new one containing all the values of the original array, but 
// make them all negative (not simply multiplied by -1). Given [1,-3,5], return [-1,-3,-5].
var arr = [1,-3,5]
function negArr(arr) {
    for (i=0;i<arr.length;i++){
        if(arr[i]>0){
            arr[i]=arr[i] * -1
        }
    }
    return arr
}
console.log(negArr(arr))

// 12
// Always Hungry - Create a function that accepts an array, and prints "yummy" each time one of the values is equal to 
// "food".  If no array values are "food", then print "I'm hungry" once.
var arr = ["help", "me","I","need", "food", "food"]
var arr1 = ["nothing", "to","eat"]
function hungry(arr) {
    var tester = 0
    for (i=0;i<arr.length;i++){
        if (arr[i]=="food"){
        console.log("yummy")
        tester = 1
        }
    }
    if(tester == 0){
        console.log("I'm hungry")
    }
}
hungry(arr)
hungry(arr1)

// 13
// Swap Toward the Center - Given an array, swap the first and last values, third and third-to-last values, etc.  
// Example: swapTowardCenter([true,42,"Ada",2,"pizza"]) turns the array into ["pizza", 42, "Ada", 2, true].  
// swapTowardCenter([1,2,3,4,5,6]) turns the array into [6,2,4,3,5,1].  No need to return the array this time.
var arr = [true,42,"Ada",2,"pizza"]
var arr1 = [1,2,3,4,5,6]
function reverseArr(arr){
    var temp = null
    for (i=0;i<arr.length/2;i+=2){
        temp = arr[i]
        arr[i] = arr[arr.length-1-i]
        arr[arr.length-1-i] = temp
    }
    return arr
}
console.log(reverseArr(arr))
console.log(reverseArr(arr1))

// 14
// Scale the Array - Given an array arr and a number num, multiply all values in the array arr by the number num, and 
// return the changed array arr.  For example, scaleArray([1,2,3], 3) should return [3,6,9].
function scaleArray(arr, num) {
    for (i=0;i<arr.length;i++) {
        arr[i] = arr[i] * num
    }
    return arr
}

console.log(scaleArray([1,2,3,4], 4))